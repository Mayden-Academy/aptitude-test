/**
 * This function gets the user data and grabs all the percentage scores
 *
 * @returns will return an array of strings of percentage scores and passes it as a param in within a function call for categoriseData
 */
function userScores(){
    let percentagesArray = []
    createUsersObject()
        .then(usersObject => usersObject.data)
        .then(usersData => {
            usersData.forEach(function (element) {
                if (element.percentage !== "")
                    percentagesArray.push(element.percentage)
            })
        })
      return percentagesArray

}
    let percentagesArray = userScores()
console.log(percentagesArray)

/**
 * This function divides user scores into three categories
 *
 * @param userScores is the user percentage scores array generated by the userScores function
 *
 * @returns will return a single array giving the total number of users falling into each score category
 */

function categoriseData(userScores){
    let highscore = 0
    let pass = 0
    let notPass = 0
    userScores.forEach(function (element) {
        console.log(parseFloat(element))
        if (parseFloat(element) >= 97){
            highscore += 1
        } else if (parseFloat(element) >= 70 && parseFloat(element) < 97) {
            pass += 1
        } else {
            notPass += 1
        }
    })
    let categorisedScores = [highscore, pass, notPass]
    console.log(categorisedScores)
    return categorisedScores
}



var ctx = document.getElementById('performanceChart');

let data = {
    datasets: [{
        type: 'pie',
        data: categoriseData(percentagesArray),
        backgroundColor: ['red', 'blue', 'yellow']
    }],

    // These labels appear in the legend and in the tooltips when hovering different arcs
    labels: [
        '>97%: high pass',
        '>70%: pass',
        '<70%: fail'
    ]
}
